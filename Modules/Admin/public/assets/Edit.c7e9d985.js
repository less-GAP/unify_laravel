import{d as q,e as g,u as E,i as x,f as M,r as n,p as N,h as s,o as R,a as e,b as o,m as i,ab as y,ae as T,aM as O,q as $,a5 as b,x as j}from"./index.a683e63c.js";import{U as F}from"./UseEloquentRouter.7e988003.js";import"https://cdn.jsdelivr.net/npm/surrealdb.js";const G={class:"p-3 bg-gray-200"},V={class:"flex"},J=o("span",{class:"ml-1 text-stone-500"},"Back",-1),z={class:"flex"},I={class:"ml-1 text-white"},K={class:"px-4 mt-5 overflow-y-auto",style:{height:"calc(100vh - 100px)"}},L={class:"flex flex-wrap -mx-2"},Q={class:"w-full px-2"},k="task",ae=q({__name:"Edit",props:{value:{type:Object,default:{}},visible:{type:Boolean,default:!0}},emits:["close"],setup(w,{emit:W}){const{fetchDetailApi:D,createApi:C}=F(k),d=g(!1),U=E(),c=x.currentRoute.value,_=g(),t=M({});(async function(){if(c.name=="task-edit"){d.value=!0;const r=await D(c.params.id);Object.assign(t,r.data)}d.value=!1})();const p=function(){x.replace({path:"/"+k})},f=()=>{d.value=!0,_.value.validate().then(()=>{t.created_by=U.user.id,t.assignees=JSON.stringify(t.assignees);try{C({...t}).then(r=>{p()})}catch(r){console.log(r)}}),d.value=!1};return(r,a)=>{const v=n("a-button"),Y=n("a-space"),A=n("a-input"),u=n("a-form-item"),B=n("a-date-picker"),h=n("a-select"),H=n("a-textarea"),P=n("a-form"),S=n("a-drawer");return R(),N(S,{closable:!1,style:{position:"relative",display:"flex","flex-direction":"column",height:"100vh"},onClose:p,open:w.visible},{default:s(()=>[e(P,j({id:"formAddTask"},r.$config.formConfig,{ref_key:"formRef",ref:_,layout:"vertical",model:t,onFinish:f}),{default:s(()=>[o("div",G,[e(v,{type:"link",onClick:p},{icon:s(()=>[o("div",V,[e(i(y),{path:i(T),class:"w-4 text-stone-500"},null,8,["path"]),J])]),_:1}),e(Y,{class:"float-right"},{default:s(()=>[e(v,{onClick:a[0]||(a[0]=l=>f()),type:"primary",class:"uppercase"},{default:s(()=>[o("div",z,[e(i(y),{path:i(O),class:"w-4 text-white"},null,8,["path"]),o("span",I,$(i(c).name=="task-edit"?"Update":"Add new"),1)])]),_:1})]),_:1})]),o("div",K,[e(u,{label:"Task name",name:"name",rules:[{required:!0,message:"Please enter task name!"}]},{default:s(()=>[e(A,{value:t.name,"onUpdate:value":a[1]||(a[1]=l=>t.name=l)},null,8,["value"])]),_:1}),o("div",L,[o("div",Q,[e(u,{label:"Due date",name:"deadline_at"},{default:s(()=>[e(B,{value:t.deadline_at,"onUpdate:value":a[2]||(a[2]=l=>t.deadline_at=l),class:"w-full","show-time":{format:"HH:mm"},"input-read-only":"","value-format":"YYYY-MM-DD HH:mm:ss",format:"HH:mm MM-DD-YYYY"},null,8,["value"])]),_:1})])]),e(u,{label:"Patient",name:"patient_id",rules:[{required:!0,message:"Please select patient!"}]},{default:s(()=>[e(i(b),{url:"patient/all",method:"GET"},{default:s(({data:l})=>[e(h,{value:t.patient_id,"onUpdate:value":a[3]||(a[3]=m=>t.patient_id=m),options:l,fieldNames:{label:"full_name",value:"id"},showSearch:"",optionFilterProp:"full_name"},null,8,["value","options"])]),_:1})]),_:1}),e(u,{label:"Assignees",name:"assignees",rules:[{required:!0,message:"Please select assignees!"}]},{default:s(()=>[e(i(b),{url:"user/all",method:"GET"},{default:s(({data:l})=>[e(h,{value:t.assignees,"onUpdate:value":a[4]||(a[4]=m=>t.assignees=m),options:l,fieldNames:{label:"full_name",value:"id"},mode:"multiple"},null,8,["value","options"])]),_:1})]),_:1}),e(u,{label:"Description",name:"description"},{default:s(()=>[e(H,{value:t.description,"onUpdate:value":a[5]||(a[5]=l=>t.description=l),rows:4},null,8,["value"])]),_:1})])]),_:1},16,["model"])]),_:1},8,["open"])}}});export{ae as default};
